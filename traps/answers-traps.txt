Q1. Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
-   1st: a0
    2nd: a1
    3rd: a2
    4th: a3
    5th: a4
    6th: a5
    7th: a6
    8th: a7

    So, a2 register holds 13.

Q2. Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
- There is no call to function in asm code for main and call to g. They are already inlined by the compiler.

Q3. At what address is the function printf located?
- 0x642

Q4. What value is in the register ra just after the jalr to printf in main?
- 0x38

Q5. Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?

Here's a description of little- and big-endian and a more whimsical description.

- He110 World, 0x726c6400, No

Q6. In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

- An uninitialized value in a2, because author didn't write down a parameter corresponding to "y=%d". 